@using Microsoft.AspNetCore.Http
@using VeterinarskaStanica.Service.AppService 
@using VeterinarskaStanica.Model.Core

@inject IHttpContextAccessor ContextAccessor
@inject IUserService UserService
@inject NavigationManager NavigationManager

<nav class="sb-sidenav accordion sb-sidenav-dark" id="sidenavAccordion">
    <div class="sb-sidenav-menu">
        <div class="nav">
            <div class="sb-sidenav-menu-heading">Početna</div>
            <a class="nav-link @(page.Equals("") ? "active" : "")" href="/">
                <div class="sb-nav-link-icon">
                    <i class="fa fa-home"></i>
                </div>
                Početna
            </a>
            @if (ContextAccessor.HttpContext.User.IsInRole("Admin") || ContextAccessor.HttpContext.User.IsInRole("Zaposlenik"))
            {
                <div class="sb-sidenav-menu-heading">Korisnici</div>
                <a class="nav-link @(page.StartsWith("korisnici") ? "active" : "")" href="/korisnici">
                    <div class="sb-nav-link-icon">
                        <i class="fa fa-user"></i>
                    </div>
                    Lista korisnika
                </a>
            }
            else
            {
                <a class="nav-link @(page.StartsWith("zivotinje") ? "active" : "")" href="/zivotinje">
                    <div class="sb-nav-link-icon">
                        <i class="fa fa-paw"></i>
                    </div>
                    Lista životinja
                </a>
            }

            @if (ContextAccessor.HttpContext.User.IsInRole("Klijent") || ContextAccessor.HttpContext.User.IsInRole("Zaposlenik"))
            {
                <a class="nav-link @(page.StartsWith("termini") ? "active" : "")" href="/termini">
                    <div class="sb-nav-link-icon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    Lista termina
                </a>
            }
        </div>
    </div>
    <div class="sb-sidenav-footer">
        <div class="small">Prijavljeni ste kao:</div>
        @userNameSurname
    </div>
</nav>

@code {

    private string userNameSurname = " - - - ";
    private string page = "";

    protected override void OnInitialized()
    {
        //Call method "LocationChanged" when location is changed
        NavigationManager.LocationChanged += LocationChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            User user = await UserService.GetUser(ContextAccessor.HttpContext.User.Identity.Name);

            userNameSurname = $"{user.Name} {user.Surname}";

            await InvokeAsync(() => StateHasChanged());
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    /// <summary>
    /// Update string Page when Location is changed
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    private async void LocationChanged(object sender, LocationChangedEventArgs e)
    {
        page = NavigationManager.Uri.Replace(NavigationManager.BaseUri, "").ToLower();

        await InvokeAsync(
            () => StateHasChanged()
        );
    }
}